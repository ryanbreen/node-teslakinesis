
<%
trip = @trip if trip == nil
index = 0 if index == nil
%>

<% if (@js_loaded == nil) %>
<script>
var map_load_functions = [];

function load_maps() {
  map_load_functions.forEach(function(fn) {
    fn();
  });
}
</script>

<%= javascript_include_tag "underscore" %>
<%= javascript_include_tag "gmaps/google" %>
<script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js'
  type='text/javascript'></script>
<script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry&amp;callback=load_maps" type="text/javascript"></script>
<% @js_loaded = true %>
<% end %>

<div class="map_container">
  <div id="map<%= index %>" class="map_canvas"></div>
</div>

<script>
map_load_functions.push(function() {

  handler<%=index%> = Gmaps.build('Google');
  handler<%=index%>.buildMap({
      provider: {
        disableDefaultUI: true<% if @map_type != :detailed %>,
        // pass in other Google Maps API options here    
        draggable: false,
        scrollwheel: false,
        panControl: false<% end %>
      },
      internal: {
        id: 'map<%=index%>'
      }
    },
    function(){
        var start = {
        "lat": <%= trip.start_location.latitude %>,
        "lng": <%= trip.start_location.longitude %>,
        "picture": {
          "url": "http://maps.google.com/mapfiles/ms/icons/green-dot.png",
          "width": 32,
          "height": 32
        }
      };
      handler<%=index%>.addMarker(start);
      <% if trip.end_location != nil %>
      var end = {
        "lat": <%= trip.end_location.latitude %>,
        "lng": <%= trip.end_location.longitude %>,
        "picture": {
          "url": "http://maps.google.com/mapfiles/ms/icons/red-dot.png",
          "width": 32,
          "height": 32
        }
      };
      handler<%=index%>.addMarker(end);

      <% end %>

  <% if trip_detail['hashes'] != nil %>

      <% trip_detail['hashes'].each_with_index { |hash, hash_index| %>
      var polyline<%=hash_index%> = <%= raw hash["data"].to_json %>;
      handler<%=index%>.addPolyline(polyline<%=hash_index%>, { strokeColor: "<%= hash['strokeColor'] %>"});
      <% } %>

      handler<%=index%>.bounds.extend(<%= raw trip_detail['upper_left'].to_json %>);
      handler<%=index%>.bounds.extend(<%= raw trip_detail['lower_right'].to_json %>);

  <% else %>

      handler<%=index%>.bounds.extend(start);
      handler<%=index%>.bounds.extend(end);

  <% end %>

      handler<%=index%>.fitMapToBounds();
    }
  );
});
</script>
